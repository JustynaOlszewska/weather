{"version":3,"sources":["utilis.js","styles/styleComponents/AppWeatherCSS.js","componentes/AppWeather.js"],"names":["activeClassName","Api_Url","API_KEY","process","units","StyleApplication","styled","main","breakPoints","small","middle","FormSearchCity","lazy","Wish","WeatherList","NotFound","AppWeather","useState","weather","setWeather","inputValue","setInputValue","cityFromInput","setCityFromInput","useEffect","url","axios","get","then","res","status","alertCity","data","catch","err","console","log","alert","city","getInputValue","value","getCityFromInput","exact","path","component"],"mappings":"2GAAA,wIAAO,IAAMA,EAAkB,cAElBC,EAAU,yCACVC,EAAUC,mCACVC,EAAQ,K,ifCAd,IAAMC,EAAmBC,UAAOC,KAAV,IAYTC,IAAYC,MAKZD,IAAYE,Q,yBCZ1BC,EAAiBC,gBAAK,kBAAM,gCAC5BC,EAAOD,gBAAK,kBAAM,gCAClBE,EAAcF,gBAAK,kBAAM,gCACzBG,EAAWH,gBAAK,kBAAM,gCAiDbI,UA/CI,WAAO,IAAD,EAESC,mBAAS,IAFlB,mBAEdC,EAFc,KAELC,EAFK,OAIeF,mBAAS,IAJxB,mBAIdG,EAJc,KAIFC,EAJE,OAKqBJ,mBAAS,IAL9B,mBAKdK,EALc,KAKCC,EALD,KAOrBC,qBAAU,WAEN,IAAMC,EAAG,UAAMxB,IAAN,iBAAsBqB,GAAgC,WAAtD,kBAA0ElB,IAA1E,gBAAuFF,KAChGwB,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GACF,OAAmB,MAAfA,EAAIC,OAAuBC,IACxBZ,EAAWU,EAAIG,KAAKA,SAE9BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE/B,CAACZ,IAEJ,IAAMS,EAAY,WACdM,MAAM,2BAcV,OACI,eAAChC,EAAD,WACI,yCACA,cAACM,EAAD,CAAgB2B,KAAMlB,EAAYmB,cAdpB,SAAAC,GAClBnB,EAAcmB,IAasDC,iBAT/C,WACrB,GAAmB,KAAfrB,EAAmB,OAAOiB,MAAM,sBACpCd,EAAiBH,GACjBC,EAAc,OAOV,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,WAAWC,UAAW,kBAAM,cAAC/B,EAAD,OAC9C,cAAC,IAAD,CAAO8B,KAAK,YAAYC,UAAW,kBAAM,cAAC9B,EAAD,CAAaI,QAASA,OAC/D,cAAC,IAAD,CAAO0B,UAAW7B","file":"static/js/4.64871062.chunk.js","sourcesContent":["export const activeClassName = 'active-link'\r\n\r\nexport const Api_Url = 'https://api.weatherbit.io/v2.0/current';\r\nexport const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\nexport const units = 'M';\r\n\r\n","import styled from \"styled-components\";\r\n\r\nimport { breakPoints } from '../variables';\r\n\r\nexport const StyleApplication = styled.main`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100vh;\r\nmax-height: 100%;\r\ntext-align: center;\r\nfont-size: 1rem;\r\ncolor: #FFF;\r\ntext-shadow: 2px 2px 2px #000000;\r\noverflow: hidden;\r\n\r\n& > h1 {\r\n@media(min-width: ${breakPoints.small}) {\r\n    font-size: 3rem;\r\n    margin-bottom: 1px;\r\n};\r\n\r\n@media(min-width: ${breakPoints.middle}) {\r\n    font-size: 4rem;\r\n};\r\n};\r\n`;\r\n","import React, { useState, useEffect, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { StyleApplication } from '../styles/styleComponents/AppWeatherCSS';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Api_Url, API_KEY, units } from '../utilis';\r\n\r\nconst FormSearchCity = lazy(() => import('./FormSearchCity'));\r\nconst Wish = lazy(() => import('./Wish'));\r\nconst WeatherList = lazy(() => import('./WeatherList'));\r\nconst NotFound = lazy(() => import('./NotFound'));\r\n\r\nconst AppWeather = () => {\r\n\r\n    const [weather, setWeather] = useState([]);\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [cityFromInput, setCityFromInput] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        const url = `${Api_Url}?city=${cityFromInput ? cityFromInput : 'Warszawa'}&units=${units}&key=${API_KEY}`;\r\n        axios.get(url)\r\n            .then(res => {\r\n                if (res.status === 204) return alertCity();\r\n                return setWeather(res.data.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, [cityFromInput]);\r\n\r\n    const alertCity = () => {\r\n        alert('Wrong city, I am sorry')\r\n    };\r\n\r\n    const getInputValue = value => {\r\n        setInputValue(value);\r\n\r\n    };\r\n\r\n    const getCityFromInput = () => {\r\n        if (inputValue === '') return alert('Enter city, please')\r\n        setCityFromInput(inputValue);\r\n        setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <StyleApplication>\r\n            <h1>Weather</h1>\r\n            <FormSearchCity city={inputValue} getInputValue={getInputValue} getCityFromInput={getCityFromInput} />\r\n            <Switch>\r\n                <Route exact path='/weather' component={() => <Wish />} />\r\n                <Route path='/forecast' component={() => <WeatherList weather={weather} />} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </StyleApplication>\r\n    );\r\n};\r\n\r\nexport default AppWeather;"],"sourceRoot":""}